name: "pr action"
description: "Pull request template action"

inputs:
  app_name:
    description: "App name"
    required: true
  aws_access_key_id:
    description: "AWS access key ID"
    required: true
  aws_secret_access_key:
    description: "AWS secret access key"
    required: true
  gh_ssh_key:
    description: "GitHub SSH key"
    required: true
runs:
  using: "composite"
  steps: 
  - name: Set ECR registry name
    shell: bash
    id: registry
    run: |
      ECR="956868976386.dkr.ecr.us-east-1.amazonaws.com"
      echo "::set-output name=ecr::${ECR}"
  - name: Set up QEMU
    uses: docker/setup-qemu-action@v1
  - name: Set up Docker Buildx
    uses: docker/setup-buildx-action@v1
  - name: Login to ECR
    uses: docker/login-action@v1
    with:
      registry: ${{ steps.registry.outputs.ecr }}
      username: ${{ inputs.aws_access_key_id }}
      password: ${{ inputs.aws_secret_access_key }}
  - name: Set commit short sha
    shell: bash
    id: commit
    run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
  - name: Set branch name
    shell: bash
    run: |
        if [[ ${{ github.event_name }} == 'pull_request' ]]; then
          echo "::set-output name=branch_name::$(echo ${{ github.head_ref }})"
        else
          echo "::set-output name=branch_name::$(echo ${GITHUB_REF#refs/heads/})"
        fi
    id: refs
  - name: Build and push container image
    uses: docker/build-push-action@v2
    with:
      push: true
      tags: |
        ${{ steps.registry.outputs.ecr }}/${{ inputs.app_name }}:${{ steps.refs.outputs.branch_name }}-${{ steps.commit.outputs.sha_short }}
        ${{ steps.registry.outputs.ecr }}/${{ inputs.app_name }}:${{ steps.refs.outputs.branch_name }}
      cache-from: type=gha
      cache-to: type=gha,mode=max
      build-args: GITHUB_SSH_KEY=${{ inputs.gh_ssh_key }}